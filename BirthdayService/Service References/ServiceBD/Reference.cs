//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BirthdayService.ServiceBD {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceBD.IServiceWCF")]
    public interface IServiceWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/DoShowData", ReplyAction="http://tempuri.org/IServiceWCF/DoShowDataResponse")]
        WebService.Person[] DoShowData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/DoShowData", ReplyAction="http://tempuri.org/IServiceWCF/DoShowDataResponse")]
        System.Threading.Tasks.Task<WebService.Person[]> DoShowDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/DoAddData", ReplyAction="http://tempuri.org/IServiceWCF/DoAddDataResponse")]
        void DoAddData(string date, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/DoAddData", ReplyAction="http://tempuri.org/IServiceWCF/DoAddDataResponse")]
        System.Threading.Tasks.Task DoAddDataAsync(string date, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/DoRemoveData", ReplyAction="http://tempuri.org/IServiceWCF/DoRemoveDataResponse")]
        void DoRemoveData(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceWCF/DoRemoveData", ReplyAction="http://tempuri.org/IServiceWCF/DoRemoveDataResponse")]
        System.Threading.Tasks.Task DoRemoveDataAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceWCFChannel : BirthdayService.ServiceBD.IServiceWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceWCFClient : System.ServiceModel.ClientBase<BirthdayService.ServiceBD.IServiceWCF>, BirthdayService.ServiceBD.IServiceWCF {
        
        public ServiceWCFClient() {
        }
        
        public ServiceWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebService.Person[] DoShowData() {
            return base.Channel.DoShowData();
        }
        
        public System.Threading.Tasks.Task<WebService.Person[]> DoShowDataAsync() {
            return base.Channel.DoShowDataAsync();
        }
        
        public void DoAddData(string date, string name) {
            base.Channel.DoAddData(date, name);
        }
        
        public System.Threading.Tasks.Task DoAddDataAsync(string date, string name) {
            return base.Channel.DoAddDataAsync(date, name);
        }
        
        public void DoRemoveData(string name) {
            base.Channel.DoRemoveData(name);
        }
        
        public System.Threading.Tasks.Task DoRemoveDataAsync(string name) {
            return base.Channel.DoRemoveDataAsync(name);
        }
    }
}
